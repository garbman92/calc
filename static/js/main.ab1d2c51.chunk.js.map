{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","this","React","Component","ReactDOM","render","document","querySelector"],"mappings":"8MAGMA,EAAe,CACnBC,OAAQ,CACNC,KAAM,uBACNC,SAAU,OAGZC,OAAQ,CACNF,KAAM,uBACNC,SAAU,cA0BCE,EAbO,SAAAC,GACpB,IATiBC,EAAKC,EAShBC,GATWF,EASQD,EAAMC,KATTC,GASc,IAAIE,MAAOC,YARrC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAEnBA,EAAM,EAAI,SAAW,UAM9B,EAA2BP,EAAaS,GAAhCP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SAEZ,OACC,sBAAKS,UAAW,2BAAhB,UACA,mBAAGA,UAAS,4BAAuBT,EAAvB,WACb,6BAAKD,IACL,mBAAGU,UAAS,6BAAwBT,EAAxB,eCtBDU,EARC,WACZ,OACI,qBAAKD,UAAU,mBAAf,SACI,qBAAKA,UAAU,qBAAf,4BCANE,E,4MACLC,MAAQ,CAAER,IAAK,KAAMS,aAAc,I,uDAKpC,WAAqB,IAAD,OACbC,OAAOC,UAAUC,YAAYC,oBAC5B,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEf,IAAKc,EAASE,OAAOC,cACjD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAEN,aAAcS,EAAIC,e,oBAMjD,WACK,OAAIC,KAAKZ,MAAMC,cAAgBW,KAAKZ,MAAMR,IAChC,0CAAaoB,KAAKZ,MAAMC,iBAG1BW,KAAKZ,MAAMC,cAAgBW,KAAKZ,MAAMR,IACnC,cAAC,EAAD,CAAeA,IAAKoB,KAAKZ,MAAMR,MAEnC,cAAC,EAAD,Q,GAvBMqB,IAAMC,WA4BxBC,IAASC,OACL,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.ab1d2c51.chunk.js","sourcesContent":["import './SeasonDisplay.css';\nimport React from 'react';\n\nconst seasonConfig = {\n  summer: {\n    text: ' Lets hit the beach!',\n    iconName: 'sun',\n  },\n  \n  winter: {\n    text: 'Burr it is cold out!',\n    iconName: 'snowflake',\n  },\n \n};\n\nconst getSeason = (lat, month) => {\nif (month > 2 && month < 9) {\n  return lat > 0 ? 'summer' : 'winter';\n} else {\n    return lat > 0 ? 'winter' : 'summer';\n}\n}\n\nconst SeasonDisplay = props => {\n  const season = getSeason(props.lat, new Date().getMonth());\n  const { text, iconName } = seasonConfig[season];\n\n    return ( \n     <div className={'season-display ${season}'}>\n     <i className={`icon-left massive ${iconName} icon`} />\n    <h1>{text}</h1>\n    <i className={`icon-right massive ${iconName} icon`} />\n    </div> \n    );\n};\n\nexport default SeasonDisplay; ","import React from 'react';\n\nconst Spinner = () => {\n    return (\n        <div className=\"ui active dimmer\">\n            <div className=\"ui big text loader\"> Loading...</div>\n        </div>\n    );\n};\n\nexport default Spinner;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nclass App extends React.Component {\n state = { lat: null, errorMessage: '' };\n    \n\n        \n\ncomponentDidMount() {\n       window.navigator.geolocation.getCurrentPosition(\n        position => this.setState({ lat: position.coords.latitude}),\n        err => this.setState({ errorMessage: err.message })\n        \n    );\n}\n\n\nrender() {\n     if (this.state.errorMessage && this.state.lat) {\n         return<div>Error: {this.state.errorMessage}</div>\n     }\n\n        if (!this.state.errorMessage && this.state.lat){\n         return <SeasonDisplay lat={this.state.lat} />\n        }\n     return <Spinner />;\n    }\n}\n\n\nReactDOM.render(\n    <App />, document.querySelector('#root'));"],"sourceRoot":""}